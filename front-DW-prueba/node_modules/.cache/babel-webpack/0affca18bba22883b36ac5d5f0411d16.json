{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/JS/Desktop/Front-PruebaDigitaWare-FACT1/git/front/app-facturacion/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport 'devextreme/data/odata/store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst defaultPath = '/';\nconst defaultUser = {\n  email: 'jsebastiang@prueba.com',\n  avatarUrl: ''\n};\nexport class AuthService {\n  constructor(router) {\n    this.router = router;\n    this._user = defaultUser;\n    this._lastAuthenticatedPath = defaultPath;\n  }\n\n  get loggedIn() {\n    return !!this._user;\n  }\n\n  set lastAuthenticatedPath(value) {\n    this._lastAuthenticatedPath = value;\n  }\n\n  logIn(email, password) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        // Send request\n        console.log(email, password);\n        _this._user = Object.assign(Object.assign({}, defaultUser), {\n          email\n        });\n\n        _this.router.navigate([_this._lastAuthenticatedPath]);\n\n        return {\n          isOk: true,\n          data: _this._user\n        };\n      } catch (_a) {\n        return {\n          isOk: false,\n          message: \"Authentication failed\"\n        };\n      }\n    })();\n  }\n\n  getUser() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        // Send request\n        return {\n          isOk: true,\n          data: _this2._user\n        };\n      } catch (_a) {\n        return {\n          isOk: false,\n          data: null\n        };\n      }\n    })();\n  }\n\n  createAccount(email, password) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        // Send request\n        console.log(email, password);\n\n        _this3.router.navigate(['/create-account']);\n\n        return {\n          isOk: true\n        };\n      } catch (_a) {\n        return {\n          isOk: false,\n          message: \"Failed to create account\"\n        };\n      }\n    })();\n  }\n\n  changePassword(email, recoveryCode) {\n    return _asyncToGenerator(function* () {\n      try {\n        // Send request\n        console.log(email, recoveryCode);\n        return {\n          isOk: true\n        };\n      } catch (_a) {\n        return {\n          isOk: false,\n          message: \"Failed to change password\"\n        };\n      }\n\n      ;\n    })();\n  }\n\n  resetPassword(email) {\n    return _asyncToGenerator(function* () {\n      try {\n        // Send request\n        console.log(email);\n        return {\n          isOk: true\n        };\n      } catch (_a) {\n        return {\n          isOk: false,\n          message: \"Failed to reset password\"\n        };\n      }\n    })();\n  }\n\n  logOut() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      _this4._user = null;\n\n      _this4.router.navigate(['/login-form']);\n    })();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac\n});\nexport class AuthGuardService {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n\n  canActivate(route) {\n    var _a, _b;\n\n    const isLoggedIn = this.authService.loggedIn;\n    const isAuthForm = ['login-form', 'reset-password', 'create-account', 'change-password/:recoveryCode'].includes(((_a = route.routeConfig) === null || _a === void 0 ? void 0 : _a.path) || defaultPath);\n\n    if (isLoggedIn && isAuthForm) {\n      this.authService.lastAuthenticatedPath = defaultPath;\n      this.router.navigate([defaultPath]);\n      return false;\n    }\n\n    if (!isLoggedIn && !isAuthForm) {\n      this.router.navigate(['/login-form']);\n    }\n\n    if (isLoggedIn) {\n      this.authService.lastAuthenticatedPath = ((_b = route.routeConfig) === null || _b === void 0 ? void 0 : _b.path) || defaultPath;\n    }\n\n    return isLoggedIn || isAuthForm;\n  }\n\n}\n\nAuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || AuthGuardService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(AuthService));\n};\n\nAuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuardService,\n  factory: AuthGuardService.ɵfac\n});","map":{"version":3,"sources":["C:/Users/JS/Desktop/Front-PruebaDigitaWare-FACT1/git/front/app-facturacion/src/app/shared/services/auth.service.ts"],"names":["i0","i1","defaultPath","defaultUser","email","avatarUrl","AuthService","constructor","router","_user","_lastAuthenticatedPath","loggedIn","lastAuthenticatedPath","value","logIn","password","console","log","Object","assign","navigate","isOk","data","_a","message","getUser","createAccount","changePassword","recoveryCode","resetPassword","logOut","ɵfac","AuthService_Factory","t","ɵɵinject","Router","ɵprov","ɵɵdefineInjectable","token","factory","AuthGuardService","authService","canActivate","route","_b","isLoggedIn","isAuthForm","includes","routeConfig","path","AuthGuardService_Factory"],"mappings":"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","sourcesContent":["import 'devextreme/data/odata/store';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/router\";\r\nconst defaultPath = '/';\r\nconst defaultUser = {\r\n    email: 'jsebastiang@prueba.com',\r\n    avatarUrl: ''\r\n};\r\nexport class AuthService {\r\n    constructor(router) {\r\n        this.router = router;\r\n        this._user = defaultUser;\r\n        this._lastAuthenticatedPath = defaultPath;\r\n    }\r\n    get loggedIn() {\r\n        return !!this._user;\r\n    }\r\n    set lastAuthenticatedPath(value) {\r\n        this._lastAuthenticatedPath = value;\r\n    }\r\n    async logIn(email, password) {\r\n        try {\r\n            // Send request\r\n            console.log(email, password);\r\n            this._user = Object.assign(Object.assign({}, defaultUser), { email });\r\n            this.router.navigate([this._lastAuthenticatedPath]);\r\n            return {\r\n                isOk: true,\r\n                data: this._user\r\n            };\r\n        }\r\n        catch (_a) {\r\n            return {\r\n                isOk: false,\r\n                message: \"Authentication failed\"\r\n            };\r\n        }\r\n    }\r\n    async getUser() {\r\n        try {\r\n            // Send request\r\n            return {\r\n                isOk: true,\r\n                data: this._user\r\n            };\r\n        }\r\n        catch (_a) {\r\n            return {\r\n                isOk: false,\r\n                data: null\r\n            };\r\n        }\r\n    }\r\n    async createAccount(email, password) {\r\n        try {\r\n            // Send request\r\n            console.log(email, password);\r\n            this.router.navigate(['/create-account']);\r\n            return {\r\n                isOk: true\r\n            };\r\n        }\r\n        catch (_a) {\r\n            return {\r\n                isOk: false,\r\n                message: \"Failed to create account\"\r\n            };\r\n        }\r\n    }\r\n    async changePassword(email, recoveryCode) {\r\n        try {\r\n            // Send request\r\n            console.log(email, recoveryCode);\r\n            return {\r\n                isOk: true\r\n            };\r\n        }\r\n        catch (_a) {\r\n            return {\r\n                isOk: false,\r\n                message: \"Failed to change password\"\r\n            };\r\n        }\r\n        ;\r\n    }\r\n    async resetPassword(email) {\r\n        try {\r\n            // Send request\r\n            console.log(email);\r\n            return {\r\n                isOk: true\r\n            };\r\n        }\r\n        catch (_a) {\r\n            return {\r\n                isOk: false,\r\n                message: \"Failed to reset password\"\r\n            };\r\n        }\r\n    }\r\n    async logOut() {\r\n        this._user = null;\r\n        this.router.navigate(['/login-form']);\r\n    }\r\n}\r\nAuthService.ɵfac = function AuthService_Factory(t) { return new (t || AuthService)(i0.ɵɵinject(i1.Router)); };\r\nAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthService, factory: AuthService.ɵfac });\r\nexport class AuthGuardService {\r\n    constructor(router, authService) {\r\n        this.router = router;\r\n        this.authService = authService;\r\n    }\r\n    canActivate(route) {\r\n        var _a, _b;\r\n        const isLoggedIn = this.authService.loggedIn;\r\n        const isAuthForm = [\r\n            'login-form',\r\n            'reset-password',\r\n            'create-account',\r\n            'change-password/:recoveryCode'\r\n        ].includes(((_a = route.routeConfig) === null || _a === void 0 ? void 0 : _a.path) || defaultPath);\r\n        if (isLoggedIn && isAuthForm) {\r\n            this.authService.lastAuthenticatedPath = defaultPath;\r\n            this.router.navigate([defaultPath]);\r\n            return false;\r\n        }\r\n        if (!isLoggedIn && !isAuthForm) {\r\n            this.router.navigate(['/login-form']);\r\n        }\r\n        if (isLoggedIn) {\r\n            this.authService.lastAuthenticatedPath = ((_b = route.routeConfig) === null || _b === void 0 ? void 0 : _b.path) || defaultPath;\r\n        }\r\n        return isLoggedIn || isAuthForm;\r\n    }\r\n}\r\nAuthGuardService.ɵfac = function AuthGuardService_Factory(t) { return new (t || AuthGuardService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(AuthService)); };\r\nAuthGuardService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthGuardService, factory: AuthGuardService.ɵfac });\r\n"]},"metadata":{},"sourceType":"module"}